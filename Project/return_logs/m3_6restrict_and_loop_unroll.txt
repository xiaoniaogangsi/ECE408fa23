Batch Size = 100:
root@Zheng:/mnt/d/Programs/ECE/ECE408fa23/ECE408# rai -p ./Project
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 36.21 KiB / 36.21 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 35.58 KiB/s 1s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Running /bin/bash -c "mkdir /build/student_code && cp -rv /src/* /build/student_code"
'/src/README.md' -> '/build/student_code/README.md'
'/src/custom' -> '/build/student_code/custom'
'/src/custom/cpu-new-forward.cc' -> '/build/student_code/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/build/student_code/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/build/student_code/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/build/student_code/custom/new-forward.cu'
'/src/m1.cc' -> '/build/student_code/m1.cc'
'/src/m2.cc' -> '/build/student_code/m2.cc'
'/src/m3.cc' -> '/build/student_code/m3.cc'
'/src/m3_report_template.docx' -> '/build/student_code/m3_report_template.docx'
'/src/rai_build.yml' -> '/build/student_code/rai_build.yml'
✱ Running /bin/bash -c "cp /ece408/project/build/weights-86.bin /build"
✱ Running /bin/bash -c "cp -rv /src/custom/* /ece408/project/src/layer/custom"
'/src/custom/cpu-new-forward.cc' -> '/ece408/project/src/layer/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/ece408/project/src/layer/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/ece408/project/src/layer/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/ece408/project/src/layer/custom/new-forward.cu'
✱ Running /bin/bash -c "cmake  /ece408/project/ && make -j8"
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found CUDA: /usr/local/cuda (found version "10.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /build
[  3%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_new-forward.cu.o
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_gpu-utils.cu.o
Scanning dependencies of target ece408net
[ 10%] Building CXX object CMakeFiles/ece408net.dir/ece408net.cc.o
[ 13%] Linking CXX static library libece408net.a
[ 13%] Built target ece408net
Scanning dependencies of target GpuConv
[ 17%] Linking CXX static library libGpuConv.a
[ 17%] Built target GpuConv
Scanning dependencies of target MiniDNNLib
[ 20%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cust.cc.o
[ 24%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cpu.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/fully_connected.cc.o
[ 31%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/max_pooling.cc.o
[ 34%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/network.cc.o
[ 37%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/mnist.cc.o
[ 41%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv.cc.o
[ 44%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/ave_pooling.cc.o
[ 48%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/softmax.cc.o
[ 51%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/relu.cc.o
[ 55%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/sigmoid.cc.o
[ 58%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/cross_entropy_loss.cc.o
[ 62%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/mse_loss.cc.o
[ 65%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/optimizer/sgd.cc.o
[ 68%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/custom/cpu-new-forward.cc.o
[ 72%] Linking CXX static library libMiniDNNLib.a
[ 72%] Built target MiniDNNLib
Scanning dependencies of target final
Scanning dependencies of target m2
Scanning dependencies of target m1
Scanning dependencies of target m3
[ 75%] Building CXX object CMakeFiles/m3.dir/m3.cc.o
[ 79%] Building CXX object CMakeFiles/m1.dir/m1.cc.o
[ 82%] Building CXX object CMakeFiles/final.dir/final.cc.o
[ 86%] Building CXX object CMakeFiles/m2.dir/m2.cc.o
[ 89%] Linking CXX executable m1
[ 93%] Linking CXX executable final
[ 96%] Linking CXX executable m3
[100%] Linking CXX executable m2
[100%] Built target final
[100%] Built target m1
[100%] Built target m2
[100%] Built target m3
✱ Running bash -c "time ./m3 100"   \\ Output will appear after run is complete.
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 100
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 7.98541 ms
Op Time: 0.251665 ms
Conv-GPU==
Layer Time: 8.1805 ms
Op Time: 0.751806 ms

Test Accuracy: 0.86


real    0m1.621s
user    0m1.409s
sys     0m0.177s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568cc5e7022420035f35b67.tar.gz. The data will be present for only a short duration of time.

Batch Size = 1000:
root@Zheng:/mnt/d/Programs/ECE/ECE408fa23/ECE408# rai -p ./Project
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 36.21 KiB / 36.21 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 26.59 KiB/s 1s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Running /bin/bash -c "mkdir /build/student_code && cp -rv /src/* /build/student_code"
'/src/README.md' -> '/build/student_code/README.md'
'/src/custom' -> '/build/student_code/custom'
'/src/custom/cpu-new-forward.cc' -> '/build/student_code/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/build/student_code/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/build/student_code/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/build/student_code/custom/new-forward.cu'
'/src/m1.cc' -> '/build/student_code/m1.cc'
'/src/m2.cc' -> '/build/student_code/m2.cc'
'/src/m3.cc' -> '/build/student_code/m3.cc'
'/src/m3_report_template.docx' -> '/build/student_code/m3_report_template.docx'
'/src/rai_build.yml' -> '/build/student_code/rai_build.yml'
✱ Running /bin/bash -c "cp /ece408/project/build/weights-86.bin /build"
✱ Running /bin/bash -c "cp -rv /src/custom/* /ece408/project/src/layer/custom"
'/src/custom/cpu-new-forward.cc' -> '/ece408/project/src/layer/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/ece408/project/src/layer/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/ece408/project/src/layer/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/ece408/project/src/layer/custom/new-forward.cu'
✱ Running /bin/bash -c "cmake  /ece408/project/ && make -j8"
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE
-- Found CUDA: /usr/local/cuda (found version "10.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /build
[  3%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_new-forward.cu.o
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_gpu-utils.cu.o
Scanning dependencies of target ece408net
[ 10%] Building CXX object CMakeFiles/ece408net.dir/ece408net.cc.o
[ 13%] Linking CXX static library libece408net.a
[ 13%] Built target ece408net
Scanning dependencies of target GpuConv
[ 17%] Linking CXX static library libGpuConv.a
[ 17%] Built target GpuConv
Scanning dependencies of target MiniDNNLib
[ 20%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cust.cc.o
[ 24%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/fully_connected.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/mnist.cc.o
[ 31%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/max_pooling.cc.o
[ 34%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv.cc.o
[ 37%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/network.cc.o
[ 41%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/ave_pooling.cc.o
[ 44%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cpu.cc.o
[ 48%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/relu.cc.o
[ 51%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/sigmoid.cc.o
[ 55%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/softmax.cc.o
[ 58%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/cross_entropy_loss.cc.o
[ 62%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/mse_loss.cc.o
[ 65%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/optimizer/sgd.cc.o
[ 68%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/custom/cpu-new-forward.cc.o
[ 72%] Linking CXX static library libMiniDNNLib.a
[ 72%] Built target MiniDNNLib
Scanning dependencies of target m3
Scanning dependencies of target m1
Scanning dependencies of target final
Scanning dependencies of target m2
[ 75%] Building CXX object CMakeFiles/m2.dir/m2.cc.o
[ 79%] Building CXX object CMakeFiles/m3.dir/m3.cc.o
[ 86%] Building CXX object CMakeFiles/final.dir/final.cc.o
[ 86%] Building CXX object CMakeFiles/m1.dir/m1.cc.o
[ 89%] Linking CXX executable m2
[ 93%] Linking CXX executable m3
[ 93%] Built target m3
[ 96%] Linking CXX executable final
[ 96%] Built target m2
[100%] Linking CXX executable m1
[100%] Built target final
[100%] Built target m1
✱ Running bash -c "time ./m3 1000"   \\ Output will appear after run is complete.
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 1000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 82.9219 ms
Op Time: 2.38786 ms
Conv-GPU==
Layer Time: 58.0717 ms
Op Time: 7.56582 ms

Test Accuracy: 0.886


real    0m10.757s
user    0m10.356s
sys     0m0.376s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568ccf3702242004d3e1ab5.tar.gz. The data will be present for only a short duration of time.


Batch Size = 5000:
root@Zheng:/mnt/d/Programs/ECE/ECE408fa23/ECE408# rai -p ./Project
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 36.21 KiB / 36.21 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 65.41 KiB/s 0s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Running /bin/bash -c "mkdir /build/student_code && cp -rv /src/* /build/student_code"
'/src/README.md' -> '/build/student_code/README.md'
'/src/custom' -> '/build/student_code/custom'
'/src/custom/cpu-new-forward.cc' -> '/build/student_code/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/build/student_code/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/build/student_code/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/build/student_code/custom/new-forward.cu'
'/src/m1.cc' -> '/build/student_code/m1.cc'
'/src/m2.cc' -> '/build/student_code/m2.cc'
'/src/m3.cc' -> '/build/student_code/m3.cc'
'/src/m3_report_template.docx' -> '/build/student_code/m3_report_template.docx'
'/src/rai_build.yml' -> '/build/student_code/rai_build.yml'
✱ Running /bin/bash -c "cp /ece408/project/build/weights-86.bin /build"
✱ Running /bin/bash -c "cp -rv /src/custom/* /ece408/project/src/layer/custom"
'/src/custom/cpu-new-forward.cc' -> '/ece408/project/src/layer/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/ece408/project/src/layer/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/ece408/project/src/layer/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/ece408/project/src/layer/custom/new-forward.cu'
✱ Running /bin/bash -c "cmake  /ece408/project/ && make -j8"
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found CUDA: /usr/local/cuda (found version "10.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /build
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_new-forward.cu.o
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_gpu-utils.cu.o
Scanning dependencies of target ece408net
[ 10%] Building CXX object CMakeFiles/ece408net.dir/ece408net.cc.o
[ 13%] Linking CXX static library libece408net.a
[ 13%] Built target ece408net
Scanning dependencies of target GpuConv
[ 17%] Linking CXX static library libGpuConv.a
[ 17%] Built target GpuConv
Scanning dependencies of target MiniDNNLib
[ 20%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/mnist.cc.o
[ 24%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/network.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/max_pooling.cc.o
[ 31%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/fully_connected.cc.o
[ 34%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cust.cc.o
[ 37%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/ave_pooling.cc.o
[ 41%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cpu.cc.o
[ 44%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv.cc.o
[ 48%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/relu.cc.o
[ 51%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/sigmoid.cc.o
[ 55%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/softmax.cc.o
[ 58%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/cross_entropy_loss.cc.o
[ 62%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/mse_loss.cc.o
[ 65%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/optimizer/sgd.cc.o
[ 68%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/custom/cpu-new-forward.cc.o
[ 72%] Linking CXX static library libMiniDNNLib.a
[ 72%] Built target MiniDNNLib
Scanning dependencies of target m1
Scanning dependencies of target final
Scanning dependencies of target m3
Scanning dependencies of target m2
[ 75%] Building CXX object CMakeFiles/m3.dir/m3.cc.o
[ 79%] Building CXX object CMakeFiles/final.dir/final.cc.o
[ 82%] Building CXX object CMakeFiles/m2.dir/m2.cc.o
[ 86%] Building CXX object CMakeFiles/m1.dir/m1.cc.o
[ 89%] Linking CXX executable m2
[ 93%] Linking CXX executable final
[ 96%] Linking CXX executable m1
[100%] Linking CXX executable m3
[100%] Built target final
[100%] Built target m2
[100%] Built target m1
[100%] Built target m3
✱ Running bash -c "time ./m3 5000"   \\ Output will appear after run is complete.
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 366.571 ms
Op Time: 11.7009 ms
Conv-GPU==
Layer Time: 295.692 ms
Op Time: 38.0754 ms

Test Accuracy: 0.871


real    0m55.232s
user    0m54.236s
sys     0m1.016s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568cd6670224200647d6ddd.tar.gz. The data will be present for only a short duration of time.

Another Batch Size = 5000:
root@Zheng:/mnt/d/Programs/ECE/ECE408fa23/ECE408# rai -p ./Project
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 36.21 KiB / 36.21 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 67.38 KiB/s 0s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Running /bin/bash -c "mkdir /build/student_code && cp -rv /src/* /build/student_code"
'/src/README.md' -> '/build/student_code/README.md'
'/src/custom' -> '/build/student_code/custom'
'/src/custom/cpu-new-forward.cc' -> '/build/student_code/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/build/student_code/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/build/student_code/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/build/student_code/custom/new-forward.cu'
'/src/m1.cc' -> '/build/student_code/m1.cc'
'/src/m2.cc' -> '/build/student_code/m2.cc'
'/src/m3.cc' -> '/build/student_code/m3.cc'
'/src/m3_report_template.docx' -> '/build/student_code/m3_report_template.docx'
'/src/rai_build.yml' -> '/build/student_code/rai_build.yml'
✱ Running /bin/bash -c "cp /ece408/project/build/weights-86.bin /build"
✱ Running /bin/bash -c "cp -rv /src/custom/* /ece408/project/src/layer/custom"
'/src/custom/cpu-new-forward.cc' -> '/ece408/project/src/layer/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/ece408/project/src/layer/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/ece408/project/src/layer/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/ece408/project/src/layer/custom/new-forward.cu'
✱ Running /bin/bash -c "cmake  /ece408/project/ && make -j8"
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found CUDA: /usr/local/cuda (found version "10.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /build
[  3%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_new-forward.cu.o
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_gpu-utils.cu.o
Scanning dependencies of target ece408net
[ 10%] Building CXX object CMakeFiles/ece408net.dir/ece408net.cc.o
[ 13%] Linking CXX static library libece408net.a
[ 13%] Built target ece408net
Scanning dependencies of target GpuConv
[ 17%] Linking CXX static library libGpuConv.a
[ 17%] Built target GpuConv
Scanning dependencies of target MiniDNNLib
[ 20%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cust.cc.o
[ 24%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/fully_connected.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/max_pooling.cc.o
[ 31%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/mnist.cc.o
[ 34%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/network.cc.o
[ 37%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cpu.cc.o
[ 41%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv.cc.o
[ 44%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/ave_pooling.cc.o
[ 48%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/relu.cc.o
[ 51%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/sigmoid.cc.o
[ 55%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/softmax.cc.o
[ 58%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/cross_entropy_loss.cc.o
[ 62%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/mse_loss.cc.o
[ 65%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/optimizer/sgd.cc.o
[ 68%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/custom/cpu-new-forward.cc.o
[ 72%] Linking CXX static library libMiniDNNLib.a
[ 72%] Built target MiniDNNLib
Scanning dependencies of target m2
Scanning dependencies of target m3
Scanning dependencies of target m1
Scanning dependencies of target final
[ 75%] Building CXX object CMakeFiles/m2.dir/m2.cc.o
[ 86%] Building CXX object CMakeFiles/m3.dir/m3.cc.o
[ 86%] Building CXX object CMakeFiles/final.dir/final.cc.o
[ 86%] Building CXX object CMakeFiles/m1.dir/m1.cc.o
[ 93%] Linking CXX executable m2
[ 93%] Linking CXX executable m1
[ 96%] Linking CXX executable final
[100%] Linking CXX executable m3
[100%] Built target m1
[100%] Built target m2
[100%] Built target final
[100%] Built target m3
✱ Running bash -c "time ./m3 5000"   \\ Output will appear after run is complete.
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 358.767 ms
Op Time: 11.5849 ms
Conv-GPU==
Layer Time: 289.617 ms
Op Time: 37.8321 ms

Test Accuracy: 0.871


real    0m53.997s
user    0m53.051s
sys     0m0.952s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568cdf2702242007d9b3352.tar.gz. The data will be present for only a short duration of time.




TILE_WIDTH = 10: Batch Size = 5000:
root@Zheng:/mnt/d/Programs/ECE/ECE408fa23/ECE408# rai -p ./Project
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 36.21 KiB / 36.21 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 26.50 KiB/s 1s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Running /bin/bash -c "mkdir /build/student_code && cp -rv /src/* /build/student_code"
'/src/README.md' -> '/build/student_code/README.md'
'/src/custom' -> '/build/student_code/custom'
'/src/custom/cpu-new-forward.cc' -> '/build/student_code/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/build/student_code/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/build/student_code/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/build/student_code/custom/new-forward.cu'
'/src/m1.cc' -> '/build/student_code/m1.cc'
'/src/m2.cc' -> '/build/student_code/m2.cc'
'/src/m3.cc' -> '/build/student_code/m3.cc'
'/src/m3_report_template.docx' -> '/build/student_code/m3_report_template.docx'
'/src/rai_build.yml' -> '/build/student_code/rai_build.yml'
✱ Running /bin/bash -c "cp /ece408/project/build/weights-86.bin /build"
✱ Running /bin/bash -c "cp -rv /src/custom/* /ece408/project/src/layer/custom"
'/src/custom/cpu-new-forward.cc' -> '/ece408/project/src/layer/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/ece408/project/src/layer/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/ece408/project/src/layer/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/ece408/project/src/layer/custom/new-forward.cu'
✱ Running /bin/bash -c "cmake  /ece408/project/ && make -j8"
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found CUDA: /usr/local/cuda (found version "10.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /build
Scanning dependencies of target ece408net
[  3%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_gpu-utils.cu.o
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_new-forward.cu.o
[ 10%] Building CXX object CMakeFiles/ece408net.dir/ece408net.cc.o
[ 13%] Linking CXX static library libece408net.a
[ 13%] Built target ece408net
Scanning dependencies of target GpuConv
[ 17%] Linking CXX static library libGpuConv.a
[ 17%] Built target GpuConv
Scanning dependencies of target MiniDNNLib
[ 20%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/mnist.cc.o
[ 24%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cust.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cpu.cc.o
[ 31%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/network.cc.o
[ 34%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/ave_pooling.cc.o
[ 37%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv.cc.o
[ 41%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/max_pooling.cc.o
[ 44%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/fully_connected.cc.o
[ 48%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/relu.cc.o
[ 51%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/softmax.cc.o
[ 55%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/sigmoid.cc.o
[ 58%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/cross_entropy_loss.cc.o
[ 62%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/mse_loss.cc.o
[ 65%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/optimizer/sgd.cc.o
[ 68%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/custom/cpu-new-forward.cc.o
[ 72%] Linking CXX static library libMiniDNNLib.a
[ 72%] Built target MiniDNNLib
Scanning dependencies of target m2
Scanning dependencies of target m3
Scanning dependencies of target m1
Scanning dependencies of target final
[ 75%] Building CXX object CMakeFiles/m1.dir/m1.cc.o
[ 79%] Building CXX object CMakeFiles/m2.dir/m2.cc.o
[ 82%] Building CXX object CMakeFiles/final.dir/final.cc.o
[ 86%] Building CXX object CMakeFiles/m3.dir/m3.cc.o
[ 89%] Linking CXX executable m2
[ 96%] Linking CXX executable m1
[ 96%] Linking CXX executable m3
[100%] Linking CXX executable final
[100%] Built target m2
[100%] Built target m3
[100%] Built target m1
[100%] Built target final
✱ Running bash -c "time ./m3 5000"   \\ Output will appear after run is complete.
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 357.792 ms
Op Time: 12.6661 ms
Conv-GPU==
Layer Time: 290.882 ms
Op Time: 31.9113 ms

Test Accuracy: 0.871


real    0m55.787s
user    0m54.796s
sys     0m0.992s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568cf2470224200c6d46f73.tar.gz. The data will be present for only a short duration of time.

TILE_WIDTH = 8, Batch Size = 5000:
root@Zheng:/mnt/d/Programs/ECE/ECE408fa23/ECE408# rai -p ./Project
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 36.21 KiB / 36.21 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 26.44 KiB/s 1s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Running /bin/bash -c "mkdir /build/student_code && cp -rv /src/* /build/student_code"
'/src/README.md' -> '/build/student_code/README.md'
'/src/custom' -> '/build/student_code/custom'
'/src/custom/cpu-new-forward.cc' -> '/build/student_code/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/build/student_code/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/build/student_code/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/build/student_code/custom/new-forward.cu'
'/src/m1.cc' -> '/build/student_code/m1.cc'
'/src/m2.cc' -> '/build/student_code/m2.cc'
'/src/m3.cc' -> '/build/student_code/m3.cc'
'/src/m3_report_template.docx' -> '/build/student_code/m3_report_template.docx'
'/src/rai_build.yml' -> '/build/student_code/rai_build.yml'
✱ Running /bin/bash -c "cp /ece408/project/build/weights-86.bin /build"
✱ Running /bin/bash -c "cp -rv /src/custom/* /ece408/project/src/layer/custom"
'/src/custom/cpu-new-forward.cc' -> '/ece408/project/src/layer/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/ece408/project/src/layer/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/ece408/project/src/layer/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/ece408/project/src/layer/custom/new-forward.cu'
✱ Running /bin/bash -c "cmake  /ece408/project/ && make -j8"
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found CUDA: /usr/local/cuda (found version "10.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /build
[  3%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_new-forward.cu.o
Scanning dependencies of target ece408net
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_gpu-utils.cu.o
[ 10%] Building CXX object CMakeFiles/ece408net.dir/ece408net.cc.o
[ 13%] Linking CXX static library libece408net.a
[ 13%] Built target ece408net
Scanning dependencies of target GpuConv
[ 17%] Linking CXX static library libGpuConv.a
[ 17%] Built target GpuConv
Scanning dependencies of target MiniDNNLib
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/fully_connected.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cpu.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cust.cc.o
[ 31%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv.cc.o
[ 34%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/network.cc.o
[ 37%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/mnist.cc.o
[ 41%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/ave_pooling.cc.o
[ 44%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/max_pooling.cc.o
[ 48%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/relu.cc.o
[ 51%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/sigmoid.cc.o
[ 55%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/softmax.cc.o
[ 58%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/cross_entropy_loss.cc.o
[ 62%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/mse_loss.cc.o
[ 65%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/optimizer/sgd.cc.o
[ 68%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/custom/cpu-new-forward.cc.o
[ 72%] Linking CXX static library libMiniDNNLib.a
[ 72%] Built target MiniDNNLib
Scanning dependencies of target m3
Scanning dependencies of target final
Scanning dependencies of target m1
Scanning dependencies of target m2
[ 79%] Building CXX object CMakeFiles/final.dir/final.cc.o
[ 79%] Building CXX object CMakeFiles/m3.dir/m3.cc.o
[ 82%] Building CXX object CMakeFiles/m1.dir/m1.cc.o
[ 86%] Building CXX object CMakeFiles/m2.dir/m2.cc.o
[ 89%] Linking CXX executable final
[ 93%] Linking CXX executable m3
[ 96%] Linking CXX executable m2
[100%] Linking CXX executable m1
[100%] Built target m2
[100%] Built target m3
[100%] Built target m1
[100%] Built target final
✱ Running bash -c "time ./m3 5000"   \\ Output will appear after run is complete.
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 347.714 ms
Op Time: 9.98276 ms
Conv-GPU==
Layer Time: 272.808 ms
Op Time: 27.7282 ms

Test Accuracy: 0.871


real    0m53.081s
user    0m52.095s
sys     0m0.968s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568cfad70224200f73edae5.tar.gz. The data will be present for only a short duration of time.

TILE_WIDTH=7:
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 369.971 ms
Op Time: 14.1656 ms
Conv-GPU==
Layer Time: 285.991 ms
Op Time: 30.9068 ms

Test Accuracy: 0.871


real    0m53.555s
user    0m52.452s
sys     0m1.105s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d131702242015846efb3.tar.gz. The data will be present for only a short duration of time.

TILE_WIDTH = 6:
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 352.518 ms
Op Time: 16.9093 ms
Conv-GPU==
Layer Time: 286.15 ms
Op Time: 41.2757 ms

Test Accuracy: 0.871


real    0m50.623s
user    0m49.622s
sys     0m0.996s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d0d27022420140b6d002.tar.gz. The data will be present for only a short duration of time.

TILE_WIDTH = 4:
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 363.72 ms
Op Time: 20.0031 ms
Conv-GPU==
Layer Time: 315.164 ms
Op Time: 49.1598 ms

Test Accuracy: 0.871


real    0m52.177s
user    0m51.071s
sys     0m1.104s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d06d7022420129d1b529.tar.gz. The data will be present for only a short duration of time.

TILE_WIDTH = 10:
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 363.583 ms
Op Time: 12.7205 ms
Conv-GPU==
Layer Time: 291.924 ms
Op Time: 35.29 ms

Test Accuracy: 0.871


real    0m51.891s
user    0m50.752s
sys     0m1.100s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d1967022420170987a36.tar.gz. The data will be present for only a short duration of time.

TILE_WIDTH = 9:
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 351.649 ms
Op Time: 12.6102 ms
Conv-GPU==
Layer Time: 280.816 ms
Op Time: 30.1036 ms

Test Accuracy: 0.871


real    0m51.044s
user    0m50.010s
sys     0m1.004s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d225702242018b5ed1d4.tar.gz. The data will be present for only a short duration of time.


It seems the best TILE_WIDTH is 8:
Batch Size = 100:
Test batch size: 100
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 7.71135 ms
Op Time: 0.215484 ms
Conv-GPU==
Layer Time: 6.36061 ms
Op Time: 0.570131 ms

Test Accuracy: 0.86


real    0m1.597s
user    0m1.399s
sys     0m0.173s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d3bf70224201d5bfebe6.tar.gz. The data will be present for only a short duration of time.




Batch Size = 1000:
Test batch size: 1000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 73.031 ms
Op Time: 2.02813 ms
Conv-GPU==
Layer Time: 57.9412 ms
Op Time: 5.58366 ms

Test Accuracy: 0.886


real    0m10.747s
user    0m10.357s
sys     0m0.360s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d36370224201bd243f99.tar.gz. The data will be present for only a short duration of time.



Batch Size = 5000:
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 360.692 ms
Op Time: 10.0617 ms
Conv-GPU==
Layer Time: 277.727 ms
Op Time: 27.8089 ms

Test Accuracy: 0.871


real    0m50.969s
user    0m49.843s
sys     0m1.088s
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6568d2a270224201a2958b68.tar.gz. The data will be present for only a short duration of time.